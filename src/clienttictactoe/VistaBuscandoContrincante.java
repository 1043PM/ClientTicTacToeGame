/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package clienttictactoe;

import java.awt.Color;
import java.awt.Image;
import javax.swing.Icon;
import javax.swing.ImageIcon;

/**
 *
 * @author ale
 */
public class VistaBuscandoContrincante extends javax.swing.JFrame {

    Boton[][] botones = new Boton[3][3];
    int filas = 3;
    int columnas = 3;
    private final String RUTA_X = "./imagenes/x.gif"; 
    private final String RUTA_O ="./imagenes/o.gif";
    
    public VistaBuscandoContrincante() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        labelGif = new javax.swing.JLabel();
        panelTicTacToe = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Buscando contrincante");

        panelTicTacToe.setBackground(new java.awt.Color(255, 255, 255));
        panelTicTacToe.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 5));
        panelTicTacToe.setLayout(new java.awt.GridLayout(3, 3));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(labelGif, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 162, Short.MAX_VALUE)
                .addComponent(panelTicTacToe, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(92, 92, 92))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelTicTacToe, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(labelGif, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void generarBotones(char seleccion){
        int nombre = 1;
        for(int fila = 0; fila<filas; fila++){
            for(int columna = 0; columna <columnas; columna++){
                botones[fila][columna] = new Boton(45*columna, 32*fila,70,70, seleccion);
                Color colorDefault = new Color(51,51,51);
                botones[fila][columna].setBackground(colorDefault);
                botones[fila][columna].setEnabled(false);
                botones[fila][columna].setName(String.valueOf(nombre));
                panelTicTacToe.add(botones[fila][columna]);
                nombre++;
            }
        }
    }
    public void botonesSeleccionables(boolean activado){
        for(int fila = 0; fila<filas; fila++){
            for(int columna = 0; columna <columnas; columna++){
              Icon icono = (botones[fila][columna].getIcon());
              if(icono == null)
                botones[fila][columna].setEnabled(activado);
            }
        }  
        
    }
//    public void desactivarBotones(){
//        for(int fila = 0; fila<filas; fila++){
//            for(int columna = 0; columna <columnas; columna++){
//              Icon icono = (botones[fila][columna].getIcon());
//              if(icono == null)
//                botones[fila][columna].setEnabled(false);
//            }
//        }  
//    }
    
    public void mostrarMovimientoOponente(String movimientoOponente){                
        for(int fila = 0; fila<filas; fila++){
            for(int columna = 0; columna <columnas; columna++){
                cargarGifOponente(fila, columna, movimientoOponente);
                
            }
        }  
    }
    
    private void cargarGifOponente(int fila, int columna, String movimientoOponente){
        if(botones[fila][columna].getName().equalsIgnoreCase(movimientoOponente)){
            if(botones[fila][columna].getSeleccion()=='x'){
                ImageIcon gif = new ImageIcon(RUTA_O);
                Image imagen = gif.getImage().getScaledInstance(botones[fila][columna].getWidth(),botones[fila][columna].getHeight(), 0);
                botones[fila][columna].setIcon(new ImageIcon(imagen));
                botones[fila][columna].setEnabled(false);
            }else{
                ImageIcon gif = new ImageIcon(RUTA_X);
                Image imagen = gif.getImage().getScaledInstance(botones[fila][columna].getWidth(),botones[fila][columna].getHeight(), 0);
                botones[fila][columna].setIcon(new ImageIcon(imagen));
                botones[fila][columna].setEnabled(false);
            }
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VistaBuscandoContrincante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VistaBuscandoContrincante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VistaBuscandoContrincante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VistaBuscandoContrincante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VistaBuscandoContrincante().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    public javax.swing.JLabel labelGif;
    public javax.swing.JPanel panelTicTacToe;
    // End of variables declaration//GEN-END:variables

    void setIconImage(ImageIcon imageIcon) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }


}
